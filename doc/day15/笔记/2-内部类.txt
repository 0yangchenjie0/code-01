内部类：
    什么是内部类？
      将类写在其它类的内部，可以写在其他类的 成员位置 和 局部位置，这时写在其他类内部的类就称为内部类（内置类，嵌套类），其他类也称为外部类。

    内部类的分类有哪些？

    - 成员内部类
      - 静态内部类

    - 局部内部类
    - 匿名内部类

    什么时候使用内部类？
      在描述事物时，若一个事物内部还包含其它可能包含的事物，比如在描述汽车时，汽车中还包含这发动机，这时发动机就可以使用内部类来描述。

    内部类的编译特点?
       对于一个名为 OuterClass 的外部类和一个名为 InnerClass 的内部类，在编译成功后，会出现这样两个 class 文件：
        - OuterClass.class
        - OuterClass$InnerClass.class

    内部类的访问特点？
       内部类可以直接访问外部类中的成员，外部类要访问内部类，必须要建立内部类对象。

成员内部类
    成员内部类注意点
        1、 外部类的静态方法中不能访问成员内部变量。
        2、 成员内部类中不能存在任何的静态变量和静态方法。
        3、 成员内部类是依附于外部类的，所以只有先创建了外部类才能够创建内部类。
        4、 访问外部类成员变量：外部类.this.成员变量，访问外部类成员方法：外部类.this.成员方法。
    静态内部类
        1、 静态内部类的创建不需要依赖外部类。
        2、 静态内部类不能使用外部类的非 static 成员变量和方法。
        3、 如果内部类中定义了静态成员，那么该内部类也必须是静态的。

    调用静态内部类是静态变量和静态方法
        1、调用静态变量：OuterClass.InnerClass.staticVariable
        2、调用静态方法：OuterClass.InnerClass.staticFunction();

    思考：有没有可以替代的方案
        将成员内部类都替换成外部类的对象

局部内部类

    class 外部类 {

        修饰符 返回值类型 方法名(参数列表) {
            class 内部类 {
                // 其他代码
            }
        }
    }
    **局部内部类注意点**
    1、 局部内部类只能在对应的局部作用域中实例化。
    2、 局部内部类中不能存在任何的静态变量和静态方法。
    3、 局部内部类是依附于外围类的，所以只有先创建了外围类才能够创建内部类。
    4、 访问外部类成员变量：外部类.this.成员变量，访问外部类成员方法：外部类.this.成员方法。
    5、 局部内部类访问的外部局部变量都必须用 final修饰，以防止更改外部局部变量的值。JDK1.8之后不必添加 final。

匿名内部类

匿名内部类也就是没有名字的内部类，它是局部内部类的一种。
使用匿名内部类前提是必须继承一个父类或实现一个接口，是创建某个类型子类对象的快捷方式。
class 外部类 {
	public 返回值类型 方法名(参数列表) {
		new 接口() | 父类() {
			// 其他代码
		}
	}
}






























