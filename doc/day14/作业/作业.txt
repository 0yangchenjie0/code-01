1.属性抽象类的特点
  - 抽象类不能创建对象，如果创建，编译无法通过而报错。只能创建其非抽象子类的对象。
    - 假设创建了抽象类的对象，调用抽象的方法，而抽象方法没有具体的方法体，没有意义。
  - 抽象类有构造方法，是供子类创建对象时，初始化父类成员使用的。
    - 子类的构造方法中，有默认的super()，需要访问父类构造方法。
  - 抽象类中，不一定包含抽象方法，但是有抽象方法的类必定是抽象类
    - 未包含抽象方法的抽象类，目的就是不想让调用者创建该类对象
  - 抽象类的子类，必须重写抽象父类中所有的抽象方法。除非该子类也是抽象类
    - 假设不重写所有抽象方法，则类中可能包含抽象方法。那么创建对象后，调用抽象的方法，没有意义。
 使用代码验证每条规则

2.abstract 不可以和哪些关键字共存？
    - private：
       私有的方法子类是无法继承到的，也不存在覆盖，而abstract和private一起使用修饰方法，abstract既要子类去实现这个方法，
       而private修饰子类根本无法得到父类这个方法。矛盾。
    - final：final修饰的方法不能被子类重写，abstract修饰的方法是要让子类重写 矛盾
    - static：static修饰的方法是属于类的，abstract修饰的方法不能被直接调用  矛盾
 abstract class Test {
     private abstract void m1();
     final abstract void m2();
     static abstract void m3();
 }
 class User extends Test {
 }
 Test.m3();
要求：通过代码验证每种情况

3.定义一个 Teacher 类
   成员变量
      number
      name
      age

   重写 Object 类的 toString() equals() hashCode()  使用idea自动生成
   理解重写后的逻辑
   理解 == 和 equals() 的区别和联系（重点）


