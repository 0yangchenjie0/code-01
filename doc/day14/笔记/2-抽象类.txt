父类中的方法，被子类重写，子类各自的实现都不尽相同。那么父类的方法声明和方法主体，只有声明还有意义，
而方法主体则没有存在的意义了。我们把 没有方法主体的方法称为抽象方法。

Java语法规定，包含抽象方法的类就是抽象类。
抽象方法 ： 没有方法体的方法 被abstract关键字修饰的方法
抽象类 ： 被abstract关键字修饰的类

- 抽象类不能创建对象，如果创建，编译无法通过而报错。只能创建其非抽象子类的对象。
  - 假设创建了抽象类的对象，调用抽象的方法，而抽象方法没有具体的方法体，没有意义。

- 抽象类有构造方法，是供子类创建对象时，初始化父类成员使用的。
  - 子类的构造方法中，有默认的super()，需要访问父类构造方法。

- 抽象类中，不一定包含抽象方法，但是有抽象方法的类必定是抽象类
  - 未包含抽象方法的抽象类，目的就是不想让调用者创建该类对象

- 抽象类的子类，必须重写抽象父类中所有的抽象方法。除非该子类也是抽象类
  - 假设不重写所有抽象方法，则类中可能包含抽象方法。那么创建对象后，调用抽象的方法，没有意义。