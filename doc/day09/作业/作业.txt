定义一个数组工具类 ArrayUtil
工具实现如下功能：
    1.根据下标获取对应的元素值
       public static int getValue(int index, int[] arr) {
           // 注意：不要出现数组下标越界的异常
       }
    2.根据元素值获取对应的下标
       public static int getIndex(int value, int[] arr) {
          // 返回第一个满足条件的元素
          // 如果没有找到满足条件的元素 返回 -1
       }
    3.控制台输出数组的内容
       public static void print(int[] arr) {

       }

    4.获取数组元素的最值
       public static int getElement(int[] arr, boolean max) {
          // max == true 返回最大值
          // max == false 返回最小值
       }
    5.数组反转
       方式一： 创建一个新的数组，将反转后的结果存储到新的数组中
       /**
         @param arr 反转前的数组
         @return 返回反转后的数组
       */
       public static int[] reverse01(int[] arr) {
           // 返回反转后的数组
       }

       方式二： 不创建新的数组，直接对原数组中的元素进行首尾交换。[1,2,3,4]
       public static void reverse02(int[] arr) {
          // 注意：对原数组执行反转
       }

    6.数组元素的删除
       需求：删除数组{5, 12, 90, 18, 77, 76, 45, 28, 59, 72}索引为2的元素，删除后：{5, 12, 18, 77, 76, 45, 28, 59, 72，0}。
       实现：把数组索引2以后的元素向前移动一位，最后把数组的最后一个元素的值设置为默认值（整数类型的默认值为0）。
       public static void remove(int value, int[] arr) {
           // 先通过元素的值，获取元素的索引
           // 注意：删除第一个匹配到的元素，如果没有配置到元素，不执行删除动作
       }

    7.数组元素的插入
      需求：在数组{5, 12, 90, 18, 77, 76, 45, 28, 59, 72}索引为2的位置插入元素222，插入后：{5, 12, 222, 90, 18, 77, 76, 45, 28, 59, 72}。
      实现：首先准备给数组扩容，然后把插入索引位置之后的元素往后移动一位，最后在插入索引的位置插入元素。

      /**
       @param index 要插入元素的索引（位置）
       @param value 要插入元素的值
       @param arr 原数组
       @return 返回一个新的数组
      */
      public static int[] insert(int index, int value, int[] arr) {
         // 返回一个新的数组，该数组中包含插入的元素
      }



