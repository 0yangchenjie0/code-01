1.形参和实参
    - 形式参数：方法定义中的参数，简称形参
    - 实际参数：方法调用时传入的参数，简称实参
    Java 中没有指针（所以没有引用传递），方法中所有参数都是值传递， 传递的是值的副本。

 基本数据类型作为参数
    实际参数把它的值传递给对应的形式参数，方法执行中形式参数值的改变不影响实际参数的值。
    方法调用时，实参把值拷贝给形参，在方法中交换的是那份拷贝的值，而不是实参数据本身。所以方法内部修改形参的值, 在方法外部的实参不会跟着形参一起改变。

 引用数据类型作为参数
    实际参数把它的值传递给对应的形式参数，方法执行中形式参数的改变直接影响实际参数。
    方法调用时，实参存放的地址被传递给方法中相对应的形参，因此形参和实参都指向堆中同一块地址，在方法执行中，对形参的操作实际上就是对实参的操作。
    所以在方法操作形式参数，那么方法外部的实参也会跟着一起改变。

2.可变参数
  可变参数：适用于参数个数不确定，但类型确定的情况，java把可变参数当做数组处理。
  我们使用表示可变长参数，位于变量类型和变量名之间，前后有无空格都可以。

  注意事项：
  1.可变参数只能是方法的最后一个参数
  2.一个方法最多一个可变参数
  3.调用有可变参数的方法，可以直接传入一个数组作为参数，也可以按 参数1,参数2,... 的形式传参。

3.main 方法的参数
  参数 String[] args 的作用就是可以在 main 方法运行前将参数传入 main 方法中。



