static 静态
new    动态

----------------------------
public static void main(String arg[]) {
    m1();
}

// 自定义方法
public void static m1() {
}

// 面向对象
class C1 {

  void m1() {

  }
}

static 可以修饰成员变量和成员方法

成员变量：
  静态成员变量
    被static关键字修饰的成员变量称为静态变量，或者叫做 类变量（这个变量是属于类的）

    /**
     * 1、 静态变量优先于对象存在，静态变量随着类的加载就已经存在了。
     * 2、 一个类中，静态变量只有一份，可以被该类和该类的对象所共享。
     * 3、 我们可以通过 类名.静态变量 或 对象.静态变量  来操作静态变量。
     *
     * 静态变量不属于莫一个具体的对象，是属于类的，推荐使用 类名.静态变量 的方式访问静态变量

     类的加载  xx.class 类变量是随着类的加载就在内存中初始化了

  非静态成员变量
    没有static关键字修饰的成员变量称为成员变量(这个变量是属于对象的)

    区别一：生命周期不同
        成员变量随着对象的创建而创建，随着对象的回收而释放。
        静态变量随着类的第一次加载而存在，随着类的消失而消失。

    区别二：调用方式不同
        成员变量只能被对象调用。
        静态变量可以被类名调用，也可以被对象调用。

    区别三：数据存储位置不同
       成员变量存储在堆中，也称为对象的特有数据。
       静态变量存储在方法区（共享数据区）的静态区，也称为对象的共享数据。

    区别四：创建次数不同
       成员变量可以创建任意多次，每创建一次对象就创建了一次成员变量。
       静态变量只能创建一次，被该类和该类的对象所共享。

   思考：static 能不能修饰局部变量？不能


成员方法
  有static修饰的方法静态成员方法或者叫做 类方法
  没有static修饰的方法普通成员方法

  静态方法的特点：
  1、 静态方法优先于对象存在，静态方法随着类的加载就已经存在了。
  2、 我们可以通过 类名.静态方法() 或 对象.静态方法() 来调用静态方法。


  静态变量和成员变量的区别：
    区别一：访问变量区别
      成员方法中既能访问成员变量，又能访问静态变量。
      静态方法中只能访问静态变量，不能访问成员变量，因为对象可能还未初始化。

    区别二：访问方法区别
        成员方法中既能访问成员方法，又能访问静态方法。
        静态方法中只能访问静态方法，不能访问成员方法，因为对象可能还未初始化。

    区别三：访问this区别
       成员方法中可以访问this。
       静态方法中不能访问this，因为对象可能还未初始化。
    思考：
      静态方法中能不能调用静态方法? 可以
      静态方法中能不能方法非静态方法？不能
      非静态方法中能不能调用静态方法？可以

总结：
  1.静态的可以访问静态的
  2.非静态的可以访问静态的
  3.静态的不能非静态的

  步骤一 .class 文件加载到 jvm，完成类的初始化(初始化静态变量，放入方法区)
  步骤二 对象初始化（创建对象，在堆中初始化非静态的成员变量）




