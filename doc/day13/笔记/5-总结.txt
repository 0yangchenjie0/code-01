1.封装
  将通用的代码封装到方法中，将方法和属性封装类中

  javabean：
     所有的成员变量私有化，提供public的方法访问成员变量
2.继承
  代码复用 extends
  成员变量
    super.成员变量
    this.成员变量
  成员方法
    this.成员方法()
    super.成员方法()
    方法的重写
       父类的方法无法满足子类需求 @Override

  构造方法
     创建子类对象的时候，调用子类的构造方法
        - 在子类构造方法的第一句是调用父类的构造方法super(),
        - 或者调用重载的构造方法this()
3.权限修饰符
   private  该成员只能在当前类被访问
   prodected 该成员只能被当前包的其它类，和不同包的子类中被访问
   default  该成员只能被当前包的其它类访问
   public  该成员可以被项目的所有类访问
   类只能使用 public default，一个java文件中，只能有一个public修饰的类
   成员变量、成员方法、构造方法 可以使用以上四个修饰符

4.final
  可以修饰 类、成员变量、成员方法

   被 final 修饰的类不能被继承
     被 final 修饰的方法不能被子类重写，可以被子类继承使用
     被 final 修饰的变量，会成为常量，值不能改变
        final 修饰局部变量
           基本类型的局部变量，被final修饰后，只能赋值一次，不能再更改
           引用类型的局部变量，被final修饰后，只能指向一个对象，地址不能再更改，但是不影响对象内部的成员变量值的修改
        final 修饰成员变量
           被final修饰的成员变量，一定要确保在创建对象之前完成赋值动作















