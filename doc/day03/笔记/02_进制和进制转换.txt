1.计算机的存储单位
  任何数据在计算机中都是以二进制的形式存在的，二进制早期由电信号开关演变而来。
  一组元器件最少8个晶体管 8个晶体管可以表示8个二进制 1111 11111   0000 0000
  bit（比特位）
  1 Byte（字节）= 8 bit（比特位）
  一个字节 0000 0000   1111 1111
  一个字节可以表示 256个数字
  1KB = 1024 Byte（字节）； 1KM = 1000M
  1MB = 1024KB；
  1GB = 1024MB；
  1TB = 1024GB;
  10月24日：程序员节
  一个 byte（字节）表示的数的范围：256个数  0000 0000

2.进制转换
  00000000  -- 0
  11111111  -- 255
  一个字节可以表示 [-128, 127]
  十进制转二进制
		 采用"除2取余，逆序排列"法：
			 
		  将 13 转为二进制 1101
		  
			13
			--     6 ... 1
			2
			
			6
			--     3 ... 0
			2
			
			3
			--     1 ... 1
			2
			
			1
			--     0 ... 1
			2
			
		 练习：14的二进制 1110
		 
		   14
		   --     7 ... 0
		   2
		   
		   7
		   --     3 ... 1
		   2
		   
		   3
		   --     1 ... 1
		   2
		   
		   1
		   --     0 ... 1
		   2
		   
    二进制转十进制
       1011              
       1*2^0 + 1*2^1 + 0*2^2  + 1*2^3
       1 + 2 + 0 + 8 = 11
   
    1011    11
       1    1
    ----
    1100    12
    
    八进制
      用 0-7 来表示 
	  注意：八进制以 0 开头
	  例如：整数 10 转化为 8 进制：012
    
    十六进制
      用 0-9 和 ABCDEF 来表示
      注意：16 进制以 0x 开头
	  例如：整数 31 转化为 16 进制：0x1F
		
3.整数的存储和运算

  正数直接把十进制的值转化为二进制，然后存储在内存中。
  先把负数转化为原码，然后再转化为反码，最后在内存中以补码的形式存储。
  正数的原码、反码、补码都是其自身。
  
  5  0000 0101 一个字节
  
    原码：按照绝对值大小转换成的二进制数，称为原码
	反码：将二进制数按位取反，所得的新二进制数称为原二进制数的反码。
	补码：反码加   称为补码。
  
  -5    
  原码：0000 0000 0000 0101
  反码：1111 1111 1111 1010
  补码：1111 1111 1111 1011
  思考：字符在计算机中如何用二进制表示呢？

  练习：
    将 15 转换成二进制
     15
     --    7 ...  1
     2
     
     7
     --    3 ...  1
     2
     
     3
     --    1 ...  1
     2
     
     1
     --    0 ...  1
     2
    
    将 10110 转换成十进制
    
    0*2^0 + 1*2^1 + 1*2^2 + 0*2^3 + 1*2^4 = 22
    
    
    
    
    
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    





















  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  