1. Java 开发环境搭建
  1.安装JDK(Java 开发工具包)
    注意：
      1.1 安装路径
      1.2 不需要安装公共JRE
  2.JDK 和 JRE 
    JDK 是 Java Development Kit 的缩写，是 Java 开发工具包，
    是程序员使用Java语言编写 Java 程序所需的开发工具包，是提供给程序员使用的。
      学习Java或者使用Java开发应用软件的程序员需要安装JDK
      JDK 中包含了 JRE
 
    JRE 是 Java Runtime Environment 的缩写，是 Java 程序的运行环境。(运行编写好的Java程序)
    如果计算机上需要运行使用Java编写的应用程序，需要安装JRE
 
    使用Java开发的时候，我们需要 JDK 和 JRE
    总结：JDK中有 核心类库、JRE、JVM。
  
  3.开发第一个Java程序
  
  源代码 --> javac(编译) --> java(解释执行) --> 机器语言
  
  需求：
    在控制台输出 Hello World
    
    1.创建 HelloWorld.java
        public class HelloWorld {
			public static void main(String[] args) {
				System.out.println("Hello World");
			}
		}
		
		类
		main方法 程序的入口方法
		语句
   2.编译源代码
   
      javac  HelloWorld.java
      
   3.解释执行字节码文件
      java HelloWorld  注意：执行的时候省略文件扩展名 .class
      
   4.配置环境变量
	   JAVA_HOME = jdk 安装的根目录
	   Path 添加
		 %JAVA_HOME%\bin
		 
   5.编译和运行代码注意事项：
	   1.正确配置环境变量
	   2.编译和运行代码，先cd到源代码所在的目录
	   3.再执行 javac 和 java 命令
	   
2.Java 语言的跨平台特性

外部环境
	互联网的爆发式发展。
	互联网
	2003
	   金山
	   BAT  百度（搜索引擎） 阿里（电商） 腾讯（社交）	  
	   京东
	   淘宝 电子商务
	   BATJ  
	   基于个人计算机 台式机笔记本 + 浏览器                        Java
	2010   ----------------------------------------------
	  3G 
	     IOS 操作系统
	     Andorid 操作系统  智能手机    
	  移动互联网时代   JAVA++	   
	  O2O 滴滴 美团   
	  字节(数据)   TMD
	  人工智能
	互联网上的计算机硬件不同，软件环境差异较大，需要一个跨平台的语言。
	
	
JAVA核心优势
跨平台

   2.1 什么是 JVM
    高级语言
		编译型语言：翻译 把整篇英文文章翻译为中文，然后我再去阅读。
			•优点：阅读效率高。
			•缺点：需要等待翻译完毕。
			
		解释型语言：翻译坐在我旁边，给我逐行的翻译英文文章。
		   •优点：无需等待，直接就可以阅读。
		   •缺点：阅读效率低。
		   
   2.2 如何实现跨平台
   
   java   源代码 --- 字节码  ---- 不同平台的机器语言
   
   c      源代码  ---------- 不同平台的机器语言(不同平台使用不同的编译器)
		
		
总结：java 可以实现一次编译，到处运行。
     跨平台实现基于 JVM. JVM 不是跨平台的。字节码文件的内容是跨平台的。
     
		
		
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   

 
 
 
 
 
 
 
 
 
    
  
    

  