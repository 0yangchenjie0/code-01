package com.bjpowernode.day09;

/**
 * - 形式参数：方法定义中的参数，简称形参
 * - 实际参数：方法调用时传入的参数，简称实参
 *  Java 方法中所有参数都是 值传递， 传递的是值的副本。
 * 基本数据类型作为方法的参数传递，形参的改变不影响实参的内容
 * 引用数据类型作为方法的参数传递，形参的改变会影响实参的内容
 *
 *
 * 基本数据类型
 *   方法调用时，实参把值拷贝给形参，在方法中交换的是那份拷贝的值，而不是实参数据本身。所以方法内部修改形参的值, 在方法外部的实参不会跟着形参一起改变。
 * 引用数据类型
 *   方法调用时，实参存放的地址被传递给方法中相对应的形参，因此形参和实参都指向堆中同一块地址，在方法执行中，对形参的操作实际上就是对实参的操作。
 *   所以在方法操作形式参数，那么方法外部的实参也会跟着一起改变。
 */
public class MethodDemo03 {

    public static void main(String[] args) {
        int[] arr = {1,2};
        m1(arr); // 引用数组类型作为方法的参数，传递的是引用的地址
        System.out.println(arr[0]); //200
    }

    static void m1(int[] arr) {
        arr[0] = 200;
        System.out.println("m1.arr[0]:" + arr[0]);// 200
    }
}
